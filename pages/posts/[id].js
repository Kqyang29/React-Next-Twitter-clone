import { ArrowLeftIcon } from '@heroicons/react/24/outline';
import { collection, doc, onSnapshot, orderBy, query } from 'firebase/firestore';
import { AnimatePresence, motion } from 'framer-motion';
import Head from 'next/head';
import { useRouter } from 'next/router'
import React, { useEffect, useState } from 'react'
import Comment from '../../components/Comment';
import CommentModal from '../../components/commentModal';
import Post from '../../components/Post';
import Sidebar from '../../components/Sidebar';
import Widgets from '../../components/Widgets';
import { db } from '../../firebase';

function Posts({ newResults, randomUsers }) {
  const router = useRouter();

  const { id } = router.query;

  const [post, setPost] = useState();
  const [comments, setComments] = useState([]);


  //get post
  useEffect(() => {
    const getPost = () => {
      const unsub = onSnapshot(doc(db, "twitter_posts", id), (doc) => {
        setPost(doc);
      });

      return () => unsub();

    }

    getPost();
  }, [db, id]);

  //get comments
  useEffect(() => {
    const getComment = () => {
      const q = query(collection(db, "twitter_posts", id, "comments"), orderBy("timestamp", "desc"));

      const unsub = onSnapshot(q, (doc) => {
        setComments(doc.docs);
      });

      return () => unsub();

    }

    getComment();
  }, [db, id]);

  return (
    <div>
      <Head>
        <title>{id} Post Page</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className='flex min-h-screen max-w-7xl mx-auto'>
        {/* Sidebar */}
        <Sidebar />

        {/* Feed */}
        <div
          className='xl:ml-[370px] border-l border-r border-gray-200 xl:min-w-[576px] sm:ml-[73px] flex-grow max-w-xl'
        >
          {/* Feed header */}
          <div className="flex items-center py-2 px-3 sticky top-0 z-20 bg-white border-b border-gray-200 space-x-2">
            <div className="hoverEffect flex items-center justify-center w-9 h-9 px-0">
              <ArrowLeftIcon
                onClick={() => router.push("/")}
                className='h-5' />
            </div>
            <h2 className='flex-grow text-lg sm:text-xl font-bold cursor-pointer'>Tweet</h2>

          </div>

          {/* boday */}
          <AnimatePresence>
            <motion.div
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              exit={{ opacity: 0 }}
              transition={{ duration: 1 }}
            >
              <Post
                post={post}
                id={id}
              />
            </motion.div>

          </AnimatePresence>

          {comments.length > 0 && (
            <div>
              <AnimatePresence>
                {comments.map((comment) => (
                  <motion.div
                    key={comment.id}
                    initial={{ opacity: 0 }}
                    animate={{ opacity: 1 }}
                    exit={{ opacity: 0 }}
                    transition={{ duration: 1 }}
                  >
                    <Comment
                      key={comment.id}
                      commentId={comment.id}
                      originalPostId={id}
                      comment={comment.data()}
                    />
                  </motion.div>
                ))}
              </AnimatePresence>
            </div>
          )}

        </div>

        {/* Widgets */}

        <Widgets
          newResults={newResults}
          randomUsers={randomUsers}
        />


        {/* Modal */}
        <CommentModal />

      </main>


    </div>
  )
}

export default Posts;

export async function getServerSideProps() {

  // https://saurav.tech/NewsAPI/top-headlines/category/health/in.json

  // Widgets components {what's happening}
  const newResults = await fetch(`https://saurav.tech/NewsAPI/top-headlines/category/health/in.json`).then(res => res.json());

  // Widgets components {Who's to follow}
  // https://randomuser.me/api/?results=50&inc=name,login,picture

  const randomUsers = await fetch(`https://randomuser.me/api/?results=50&inc=name,login,picture`).then(res => res.json());


  return {
    props: {
      newResults: Object.entries(newResults)[2][1],
      randomUsers: randomUsers.results,
    },
  }
}
